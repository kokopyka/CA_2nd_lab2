Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 21.23      0.07     0.07        4    17.51    31.63  BigNumbers::string_to_array(std::string&)
 12.13      0.11     0.04  8317936     0.00     0.00  std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>)
  9.10      0.14     0.03        1    30.02    50.03  write(char const*, std::vector<long, std::allocator<long> > const*)
  9.10      0.17     0.03                             __gnu_cxx::__normal_iterator<char*, std::string>::base() const
  6.06      0.19     0.02  6535481     0.00     0.00  void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&)
  6.06      0.21     0.02  1188258     0.00     0.00  std::move_iterator<long*> std::__make_move_if_noexcept_iterator<long*, std::move_iterator<long*> >(long*)
  6.06      0.23     0.02                             std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&)
  3.03      0.24     0.01  7723678     0.00     0.00  void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&)
  3.03      0.25     0.01  4158909     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&)
  3.03      0.26     0.01  2376514     0.00     0.00  std::vector<long, std::allocator<long> >::push_back(long&&)
  3.03      0.27     0.01  2079450     0.00     0.00  std::vector<long, std::allocator<long> >::operator[](unsigned long) const
  3.03      0.28     0.01  1782388     0.00     0.00  std::vector<long, std::allocator<long> >::_M_check_len(unsigned long, char const*) const
  3.03      0.29     0.01  1782388     0.00     0.00  long* std::__uninitialized_copy_a<std::move_iterator<long*>, long*, long>(std::move_iterator<long*>, std::move_iterator<long*>, long*, std::allocator<long>&)
  3.03      0.30     0.01  1485320     0.00     0.00  __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int)
  3.03      0.31     0.01  1188258     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::string>::operator-(long const&) const
  3.03      0.32     0.01                             BigNumbers::manage_CF(bool, int)
  3.03      0.33     0.01                             std::enable_if<std::allocator_traits<std::allocator<long> >::__destroy_helper<long>::value, void>::type std::allocator_traits<std::allocator<long> >::_S_destroy<long>(std::allocator<long>&, long*)
  0.00      0.33     0.00  4158909     0.00     0.00  BigNumbers::process_by_sign(bool, bool)
  0.00      0.33     0.00  2376845     0.00     0.00  std::vector<long, std::allocator<long> >::size() const
  0.00      0.33     0.00  2376516     0.00     0.00  long* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*)
  0.00      0.33     0.00  2376514     0.00     0.00  std::vector<long, std::allocator<long> >::operator[](unsigned long)
  0.00      0.33     0.00  1782388     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&)
  0.00      0.33     0.00  1782388     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.33     0.00  1188268     0.00     0.00  char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag)
  0.00      0.33     0.00  1188258     0.00     0.00  __gnu_cxx::new_allocator<long>::allocate(unsigned long, void const*)
  0.00      0.33     0.00  1188258     0.00     0.00  void __gnu_cxx::new_allocator<long>::construct<long, long>(long*, long&&)
  0.00      0.33     0.00  1188258     0.00     0.00  std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> >&&)
  0.00      0.33     0.00      315     0.00     0.00  long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*)
  0.00      0.33     0.00      252     0.00     0.00  BigNumbers::is_correct(std::string&)
  0.00      0.33     0.00      189     0.00     0.00  long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<long>(long const*, long const*, long*)
  0.00      0.33     0.00      189     0.00     0.00  long* std::__copy_move_a2<true, long*, long*>(long*, long*, long*)
  0.00      0.33     0.00      137     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::_M_get_Tp_allocator()
  0.00      0.33     0.00      128     0.00     0.00  bool __gnu_cxx::__is_null_pointer<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>)
  0.00      0.33     0.00      126     0.00     0.00  __gnu_cxx::new_allocator<long>::new_allocator(__gnu_cxx::new_allocator<long> const&)
  0.00      0.33     0.00      126     0.00     0.00  std::move_iterator<long*>::base() const
  0.00      0.33     0.00      126     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::__distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::random_access_iterator_tag)
  0.00      0.33     0.00      126     0.00     0.00  std::_Miter_base<std::move_iterator<long*> >::iterator_type std::__miter_base<std::move_iterator<long*> >(std::move_iterator<long*>)
  0.00      0.33     0.00      126     0.00     0.00  void std::swap<long*>(long*&, long*&)
  0.00      0.33     0.00       70     0.00     0.00  void std::_Destroy_aux<true>::__destroy<long*>(long*, long*)
  0.00      0.33     0.00       70     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::_M_deallocate(long*, unsigned long)
  0.00      0.33     0.00       70     0.00     0.00  void std::_Destroy<long*>(long*, long*)
  0.00      0.33     0.00       70     0.00     0.00  void std::_Destroy<long*, long>(long*, long*, std::allocator<long>&)
  0.00      0.33     0.00       63     0.00     0.00  __gnu_cxx::new_allocator<long>::deallocate(long*, unsigned long)
  0.00      0.33     0.00       63     0.00     0.00  std::_Iter_base<std::move_iterator<long*>, true>::_S_base(std::move_iterator<long*>)
  0.00      0.33     0.00       63     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long)
  0.00      0.33     0.00       63     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl(std::allocator<long> const&)
  0.00      0.33     0.00       63     0.00     0.00  std::allocator_traits<std::allocator<long> >::max_size(std::allocator<long> const&)
  0.00      0.33     0.00       63     0.00     0.00  long* std::__copy_move_a<true, long*, long*>(long*, long*, long*)
  0.00      0.33     0.00       48     0.00     0.00  bool __gnu_cxx::operator==<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&)
  0.00      0.33     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<long>::~new_allocator()
  0.00      0.33     0.00        9     0.00     0.00  std::allocator<long>::~allocator()
  0.00      0.33     0.00        7     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::_Vector_impl::~_Vector_impl()
  0.00      0.33     0.00        7     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::~_Vector_base()
  0.00      0.33     0.00        7     0.00     0.00  std::vector<long, std::allocator<long> >::~vector()
  0.00      0.33     0.00        6     0.00     0.00  long* std::uninitialized_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*)
  0.00      0.33     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<long>::new_allocator()
  0.00      0.33     0.00        5     0.00     0.00  std::allocator<long>::allocator()
  0.00      0.33     0.00        5     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl()
  0.00      0.33     0.00        5     0.00     0.00  std::_Vector_base<long, std::allocator<long> >::_Vector_base()
  0.00      0.33     0.00        5     0.00     0.00  std::vector<long, std::allocator<long> >::vector()
  0.00      0.33     0.00        4     0.00     0.00  char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&)
  0.00      0.33     0.00        4     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
  0.00      0.33     0.00        4     0.00     0.00  bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&)
  0.00      0.33     0.00        2     0.00     0.00  char* std::string::_S_construct_aux<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::__false_type)
  0.00      0.33     0.00        2     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<long>)({parm#3}))) std::allocator_traits<std::allocator<long> >::construct<long, long>(std::allocator<long>&, long*, long&&)
  0.00      0.33     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.33     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.33     0.00        1     0.00     0.00  read(char const*, std::string&, std::string&, char&)
  0.00      0.33     0.00        1     0.00    63.26  BigNumbers::init()
  0.00      0.33     0.00        1     0.00     0.00  BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*)
  0.00      0.33     0.00        1     0.00    67.90  BigNumbers::process()
  0.00      0.33     0.00        1     0.00     0.00  BigNumbers::BigNumbers(std::string, std::string, char)
  0.00      0.33     0.00        1     0.00     0.00  BigNumbers::~BigNumbers()
  0.00      0.33     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<long> >::_S_propagate_on_move_assign()
  0.00      0.33     0.00        1     0.00     0.00  __gnu_cxx::__promote_2<int, unsigned int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<unsigned int, std::__is_integer<unsigned int>::__value>::__type>::__type std::pow<int, unsigned int>(int, unsigned int)
  0.00      0.33     0.00        1     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 3.03% of 0.33 seconds

index % time    self  children    called     name
[1]     39.4    0.12    0.01 16635747+25547702 <cycle 1 as a whole> [1]
                0.04    0.00 8317936+1782325     std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
                0.02    0.00 6535481             void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
                0.02    0.00 1188258             std::move_iterator<long*> std::__make_move_if_noexcept_iterator<long*, std::move_iterator<long*> >(long*) <cycle 1> [13]
                0.01    0.00 7723678+63          void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                0.00    0.01 4158909             BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
                0.01    0.00 4158909             __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
                0.01    0.00 1782388             long* std::__uninitialized_copy_a<std::move_iterator<long*>, long*, long>(std::move_iterator<long*>, std::move_iterator<long*>, long*, std::allocator<long>&) <cycle 1> [23]
                0.01    0.00 1782388             std::vector<long, std::allocator<long> >::_M_check_len(unsigned long, char const*) const <cycle 1> [22]
                0.00    0.00 2376516             long* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 1> [38]
                0.00    0.00 1782388             unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) <cycle 1> [40]
                0.00    0.00 1188268             char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
                0.00    0.00 1188258             void __gnu_cxx::new_allocator<long>::construct<long, long>(long*, long&&) <cycle 1> [43]
                0.00    0.00      63             std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long) <cycle 1> [61]
                0.00    0.00       4             std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) <cycle 1> [78]
                0.00    0.00       2             decltype (_S_construct({parm#1}, {parm#2}, (forward<long>)({parm#3}))) std::allocator_traits<std::allocator<long> >::construct<long, long>(std::allocator<long>&, long*, long&&) <cycle 1> [81]
                0.00    0.00       2             char* std::string::_S_construct_aux<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::__false_type) <cycle 1> [80]
                0.00    0.00       1             BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) <cycle 1> [85]
-----------------------------------------------
                0.04    0.03       2/4           BigNumbers::init() [6]
                0.04    0.03       2/4           BigNumbers::plus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [5]
[2]     38.3    0.07    0.06       4         BigNumbers::string_to_array(std::string&) [2]
                0.00    0.02 2376514/2376514     std::vector<long, std::allocator<long> >::operator[](unsigned long) [15]
                0.00    0.02 1188258/1188258     std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> >&&) [16]
                0.01    0.00 2376514/2376514     std::vector<long, std::allocator<long> >::push_back(long&&) [20]
                0.01    0.00 1188256/16635747     BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
                0.00    0.00 1188256/1782388     __gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&) [39]
                0.00    0.00       2/5           std::vector<long, std::allocator<long> >::vector() [76]
-----------------------------------------------
                                                 <spontaneous>
[3]     35.7    0.00    0.12                 main [3]
                0.00    0.07       1/1           BigNumbers::process() [4]
                0.03    0.02       1/1           write(char const*, std::vector<long, std::allocator<long> > const*) [7]
                0.00    0.00       1/1           read(char const*, std::string&, std::string&, char&) [84]
                0.00    0.00       1/1           BigNumbers::BigNumbers(std::string, std::string, char) [86]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<long> >::_S_propagate_on_move_assign() [88]
                0.00    0.00       1/1           BigNumbers::~BigNumbers() [87]
-----------------------------------------------
                0.00    0.07       1/1           main [3]
[4]     20.6    0.00    0.07       1         BigNumbers::process() [4]
                0.00    0.06       1/1           BigNumbers::init() [6]
                0.00    0.00  594130/16635747     __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
                0.00    0.00       2/2376845     std::vector<long, std::allocator<long> >::size() const [37]
-----------------------------------------------
                                                 <spontaneous>
[5]     20.6    0.00    0.07                 BigNumbers::plus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [5]
                0.04    0.03       2/4           BigNumbers::string_to_array(std::string&) [2]
                0.00    0.00  594131/16635747     void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
                0.00    0.00 1188262/2376845     std::vector<long, std::allocator<long> >::size() const [37]
                0.00    0.00  594130/1782388     __gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&) [39]
                0.00    0.00       2/4           char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&) [77]
                0.00    0.00       2/7           std::vector<long, std::allocator<long> >::~vector() [70]
-----------------------------------------------
                0.00    0.06       1/1           BigNumbers::process() [4]
[6]     19.2    0.00    0.06       1         BigNumbers::init() [6]
                0.04    0.03       2/4           BigNumbers::string_to_array(std::string&) [2]
                0.00    0.00       2/16635747     BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
                0.00    0.00       2/1782388     __gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&) [39]
-----------------------------------------------
                0.03    0.02       1/1           main [3]
[7]     15.2    0.03    0.02       1         write(char const*, std::vector<long, std::allocator<long> > const*) [7]
                0.01    0.00 2079450/2079450     std::vector<long, std::allocator<long> >::operator[](unsigned long) const [21]
                0.01    0.00 1485320/1485320     __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int) [24]
                0.00    0.00       2/2376845     std::vector<long, std::allocator<long> >::size() const [37]
                0.00    0.00       1/1           std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [90]
-----------------------------------------------
                             1782325             std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
                             1188258             unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) <cycle 1> [40]
                             1782388             __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
                             1782388             std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long) <cycle 1> [61]
                             1782451             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                0.00    0.00      63/16635747     __gnu_cxx::__normal_iterator<char*, std::string>::base() const [11]
                0.01    0.00 1782388/16635747     std::enable_if<std::allocator_traits<std::allocator<long> >::__destroy_helper<long>::value, void>::type std::allocator_traits<std::allocator<long> >::_S_destroy<long>(std::allocator<long>&, long*) [9]
[8]     12.1    0.04    0.00 8317936+1782325 std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
                             2970583             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                             1782325             std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
-----------------------------------------------
                                                 <spontaneous>
[9]     11.5    0.01    0.03                 std::enable_if<std::allocator_traits<std::allocator<long> >::__destroy_helper<long>::value, void>::type std::allocator_traits<std::allocator<long> >::_S_destroy<long>(std::allocator<long>&, long*) [9]
                0.01    0.00 1782388/16635747     std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
                0.01    0.00 1782388/16635747     BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
-----------------------------------------------
                              594129             BigNumbers::manage_CF(bool, int) [10]
[10]    11.5    0.01    0.03       0+594129  BigNumbers::manage_CF(bool, int) [10]
                0.02    0.00 2376516/16635747     __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
                0.01    0.00 1188258/16635747     BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
                0.00    0.00  594129/2376845     std::vector<long, std::allocator<long> >::size() const [37]
                              594129             BigNumbers::manage_CF(bool, int) [10]
-----------------------------------------------
                                                 <spontaneous>
[11]     9.1    0.03    0.00                 __gnu_cxx::__normal_iterator<char*, std::string>::base() const [11]
                0.00    0.00      63/16635747     std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
-----------------------------------------------
                                   1             BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) <cycle 1> [85]
                             1188258             long* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 1> [38]
                0.00    0.00      63/16635747     void std::allocator_traits<std::allocator<long> >::destroy<long>(std::allocator<long>&, long*) [28]
                0.00    0.00  594131/16635747     BigNumbers::plus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [5]
                0.02    0.00 2376514/16635747     std::vector<long, std::allocator<long> >::operator[](unsigned long) [15]
                0.02    0.00 2376514/16635747     std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> >&&) [16]
[12]     6.1    0.02    0.00 6535481         void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
                             1188258             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                                   2             decltype (_S_construct({parm#1}, {parm#2}, (forward<long>)({parm#3}))) std::allocator_traits<std::allocator<long> >::construct<long, long>(std::allocator<long>&, long*, long&&) <cycle 1> [81]
-----------------------------------------------
                             1188258             std::vector<long, std::allocator<long> >::_M_check_len(unsigned long, char const*) const <cycle 1> [22]
[13]     6.1    0.02    0.00 1188258         std::move_iterator<long*> std::__make_move_if_noexcept_iterator<long*, std::move_iterator<long*> >(long*) <cycle 1> [13]
                             1188258             long* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 1> [38]
-----------------------------------------------
                                                 <spontaneous>
[14]     6.1    0.02    0.00                 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&) [14]
-----------------------------------------------
                0.00    0.02 2376514/2376514     BigNumbers::string_to_array(std::string&) [2]
[15]     5.6    0.00    0.02 2376514         std::vector<long, std::allocator<long> >::operator[](unsigned long) [15]
                0.02    0.00 2376514/16635747     void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
-----------------------------------------------
                0.00    0.02 1188258/1188258     BigNumbers::string_to_array(std::string&) [2]
[16]     5.6    0.00    0.02 1188258         std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> >&&) [16]
                0.02    0.00 2376514/16635747     void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
-----------------------------------------------
                                  63             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                                  63             char* std::string::_S_construct_aux<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::__false_type) <cycle 1> [80]
                             1188258             void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
                             1188258             void __gnu_cxx::new_allocator<long>::construct<long, long>(long*, long&&) <cycle 1> [43]
                             2970583             std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
                0.01    0.00 1188258/16635747     std::remove_reference<std::allocator<long>&>::type&& std::move<std::allocator<long>&>(std::allocator<long>&) [27]
                0.01    0.00 1188258/16635747     std::vector<long, std::allocator<long> >::max_size() const [26]
[17]     3.0    0.01    0.00 7723678+63      void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                0.00    0.00     130/137         std::_Vector_base<long, std::allocator<long> >::_M_get_Tp_allocator() [48]
                0.00    0.00     126/126         void std::swap<long*>(long*&, long*&) [54]
                0.00    0.00      63/2376845     std::vector<long, std::allocator<long> >::size() const [37]
                0.00    0.00      63/70          void std::_Destroy<long*, long>(long*, long*, std::allocator<long>&) [58]
                0.00    0.00       2/9           std::allocator<long>::~allocator() [67]
                0.00    0.00       2/7           std::vector<long, std::allocator<long> >::~vector() [70]
                             1782451             std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
                             1782388             std::vector<long, std::allocator<long> >::_M_check_len(unsigned long, char const*) const <cycle 1> [22]
                             1188264             char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
                                  63             std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long) <cycle 1> [61]
                                   2             BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
                                  63             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
-----------------------------------------------
                                   2             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                0.00    0.00       2/16635747     BigNumbers::init() [6]
                0.00    0.00       3/16635747     BigNumbers::output() [29]
                0.01    0.00 1188256/16635747     BigNumbers::string_to_array(std::string&) [2]
                0.01    0.00 1188258/16635747     BigNumbers::manage_CF(bool, int) [10]
                0.01    0.00 1782388/16635747     std::enable_if<std::allocator_traits<std::allocator<long> >::__destroy_helper<long>::value, void>::type std::allocator_traits<std::allocator<long> >::_S_destroy<long>(std::allocator<long>&, long*) [9]
[18]     3.0    0.00    0.01 4158909         BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
                0.01    0.00 1188258/1188258     __gnu_cxx::__normal_iterator<char*, std::string>::operator-(long const&) const [25]
                                   1             BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) <cycle 1> [85]
-----------------------------------------------
                             1188258             BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) <cycle 1> [85]
                0.00    0.00       5/16635747     BigNumbers::output() [29]
                0.00    0.00  594130/16635747     BigNumbers::process() [4]
                0.02    0.00 2376516/16635747     BigNumbers::manage_CF(bool, int) [10]
[19]     3.0    0.01    0.00 4158909         __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
                             1782388             unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) <cycle 1> [40]
                             1782388             std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
-----------------------------------------------
                0.01    0.00 2376514/2376514     BigNumbers::string_to_array(std::string&) [2]
[20]     3.0    0.01    0.00 2376514         std::vector<long, std::allocator<long> >::push_back(long&&) [20]
-----------------------------------------------
                0.01    0.00 2079450/2079450     write(char const*, std::vector<long, std::allocator<long> > const*) [7]
[21]     3.0    0.01    0.00 2079450         std::vector<long, std::allocator<long> >::operator[](unsigned long) const [21]
-----------------------------------------------
                             1782388             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
[22]     3.0    0.01    0.00 1782388         std::vector<long, std::allocator<long> >::_M_check_len(unsigned long, char const*) const <cycle 1> [22]
                             1188258             std::move_iterator<long*> std::__make_move_if_noexcept_iterator<long*, std::move_iterator<long*> >(long*) <cycle 1> [13]
-----------------------------------------------
                             1782388             std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long) <cycle 1> [61]
[23]     3.0    0.01    0.00 1782388         long* std::__uninitialized_copy_a<std::move_iterator<long*>, long*, long>(std::move_iterator<long*>, std::move_iterator<long*>, long*, std::allocator<long>&) <cycle 1> [23]
                             1188258             long* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 1> [38]
-----------------------------------------------
                0.01    0.00 1485320/1485320     write(char const*, std::vector<long, std::allocator<long> > const*) [7]
[24]     3.0    0.01    0.00 1485320         __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int) [24]
-----------------------------------------------
                0.01    0.00 1188258/1188258     BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
[25]     3.0    0.01    0.00 1188258         __gnu_cxx::__normal_iterator<char*, std::string>::operator-(long const&) const [25]
-----------------------------------------------
                                                 <spontaneous>
[26]     2.8    0.00    0.01                 std::vector<long, std::allocator<long> >::max_size() const [26]
                0.01    0.00 1188258/16635747     void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
-----------------------------------------------
                                                 <spontaneous>
[27]     2.8    0.00    0.01                 std::remove_reference<std::allocator<long>&>::type&& std::move<std::allocator<long>&>(std::allocator<long>&) [27]
                0.01    0.00 1188258/16635747     void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
-----------------------------------------------
                                                 <spontaneous>
[28]     0.0    0.00    0.00                 void std::allocator_traits<std::allocator<long> >::destroy<long>(std::allocator<long>&, long*) [28]
                0.00    0.00      63/16635747     void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
                0.00    0.00      63/2376845     std::vector<long, std::allocator<long> >::size() const [37]
-----------------------------------------------
                                                 <spontaneous>
[29]     0.0    0.00    0.00                 BigNumbers::output() [29]
                0.00    0.00       5/16635747     __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
                0.00    0.00       3/16635747     BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
                0.00    0.00       4/2376845     std::vector<long, std::allocator<long> >::size() const [37]
-----------------------------------------------
[30]     0.0    0.00    0.00     252+252     <cycle 2 as a whole> [30]
                0.00    0.00     315             long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 2> [44]
                0.00    0.00     189             long* std::__copy_move_a2<true, long*, long*>(long*, long*, long*) <cycle 2> [47]
-----------------------------------------------
                0.00    0.00       2/2376845     write(char const*, std::vector<long, std::allocator<long> > const*) [7]
                0.00    0.00       2/2376845     BigNumbers::process() [4]
                0.00    0.00       4/2376845     BigNumbers::output() [29]
                0.00    0.00      63/2376845     void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                0.00    0.00      63/2376845     void std::allocator_traits<std::allocator<long> >::destroy<long>(std::allocator<long>&, long*) [28]
                0.00    0.00      63/2376845     std::allocator<long>::allocator(std::allocator<long> const&) [103]
                0.00    0.00     126/2376845     long* std::__uninitialized_move_if_noexcept_a<long*, long*, std::allocator<long> >(long*, long*, long*, std::allocator<long>&) [115]
                0.00    0.00  594129/2376845     BigNumbers::manage_CF(bool, int) [10]
                0.00    0.00  594131/2376845     BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) <cycle 1> [85]
                0.00    0.00 1188262/2376845     BigNumbers::plus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [5]
[37]     0.0    0.00    0.00 2376845         std::vector<long, std::allocator<long> >::size() const [37]
-----------------------------------------------
                             1188258             std::move_iterator<long*> std::__make_move_if_noexcept_iterator<long*, std::move_iterator<long*> >(long*) <cycle 1> [13]
                             1188258             long* std::__uninitialized_copy_a<std::move_iterator<long*>, long*, long>(std::move_iterator<long*>, std::move_iterator<long*>, long*, std::allocator<long>&) <cycle 1> [23]
[38]     0.0    0.00    0.00 2376516         long* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 1> [38]
                             1188258             void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
-----------------------------------------------
                0.00    0.00       2/1782388     BigNumbers::init() [6]
                0.00    0.00  594130/1782388     BigNumbers::plus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [5]
                0.00    0.00 1188256/1782388     BigNumbers::string_to_array(std::string&) [2]
[39]     0.0    0.00    0.00 1782388         __gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&) [39]
-----------------------------------------------
                             1782388             __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
[40]     0.0    0.00    0.00 1782388         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) <cycle 1> [40]
                             1188258             std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
-----------------------------------------------
                                   4             decltype (_S_construct({parm#1}, {parm#2}, (forward<long>)({parm#3}))) std::allocator_traits<std::allocator<long> >::construct<long, long>(std::allocator<long>&, long*, long&&) <cycle 1> [81]
                             1188264             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
[41]     0.0    0.00    0.00 1188268         char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
                0.00    0.00      12/48          bool __gnu_cxx::operator==<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [65]
                0.00    0.00       2/128         bool __gnu_cxx::__is_null_pointer<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>) [49]
                0.00    0.00       2/4           bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&) [79]
                             1188258             void __gnu_cxx::new_allocator<long>::construct<long, long>(long*, long&&) <cycle 1> [43]
                                   4             std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) <cycle 1> [78]
-----------------------------------------------
                0.00    0.00 1188258/1188258     std::enable_if<std::allocator_traits<std::allocator<long> >::__construct_helper<long, long>::value, void>::type std::allocator_traits<std::allocator<long> >::_S_construct<long, long>(std::allocator<long>&, long*, long&&) [109]
[42]     0.0    0.00    0.00 1188258         __gnu_cxx::new_allocator<long>::allocate(unsigned long, void const*) [42]
-----------------------------------------------
                             1188258             char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
[43]     0.0    0.00    0.00 1188258         void __gnu_cxx::new_allocator<long>::construct<long, long>(long*, long&&) <cycle 1> [43]
                             1188258             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
-----------------------------------------------
                                 126             long* std::__copy_move_a2<true, long*, long*>(long*, long*, long*) <cycle 2> [47]
                0.00    0.00      63/252         std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl(std::allocator<long> const&) [62]
                0.00    0.00     126/252         __gnu_cxx::new_allocator<long>::new_allocator(__gnu_cxx::new_allocator<long> const&) [50]
[44]     0.0    0.00    0.00     315         long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 2> [44]
                                 126             long* std::__copy_move_a2<true, long*, long*>(long*, long*, long*) <cycle 2> [47]
-----------------------------------------------
                                 378             BigNumbers::is_correct(std::string&) [45]
                0.00    0.00     252/252         long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<long>(long const*, long const*, long*) [46]
[45]     0.0    0.00    0.00     252+378     BigNumbers::is_correct(std::string&) [45]
                                 378             BigNumbers::is_correct(std::string&) [45]
-----------------------------------------------
                0.00    0.00      63/189         long* std::__copy_move_a<true, long*, long*>(long*, long*, long*) [64]
                0.00    0.00     126/189         std::_Iter_base<long*, false>::_S_base(long*) [104]
[46]     0.0    0.00    0.00     189         long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<long>(long const*, long const*, long*) [46]
                0.00    0.00     252/252         BigNumbers::is_correct(std::string&) [45]
-----------------------------------------------
                                 126             long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 2> [44]
                0.00    0.00      63/252         __gnu_cxx::new_allocator<long>::max_size() const [99]
[47]     0.0    0.00    0.00     189         long* std::__copy_move_a2<true, long*, long*>(long*, long*, long*) <cycle 2> [47]
                0.00    0.00      63/63          std::_Iter_base<std::move_iterator<long*>, true>::_S_base(std::move_iterator<long*>) [60]
                                 126             long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 2> [44]
-----------------------------------------------
                0.00    0.00       7/137         std::vector<long, std::allocator<long> >::~vector() [70]
                0.00    0.00     130/137         void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
[48]     0.0    0.00    0.00     137         std::_Vector_base<long, std::allocator<long> >::_M_get_Tp_allocator() [48]
-----------------------------------------------
                0.00    0.00       2/128         char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
                0.00    0.00     126/128         __gnu_cxx::new_allocator<long>::new_allocator(__gnu_cxx::new_allocator<long> const&) [50]
[49]     0.0    0.00    0.00     128         bool __gnu_cxx::__is_null_pointer<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>) [49]
-----------------------------------------------
                0.00    0.00      63/126         long* std::__uninitialized_move_if_noexcept_a<long*, long*, std::allocator<long> >(long*, long*, long*, std::allocator<long>&) [115]
                0.00    0.00      63/126         std::allocator<long>::allocator(std::allocator<long> const&) [103]
[50]     0.0    0.00    0.00     126         __gnu_cxx::new_allocator<long>::new_allocator(__gnu_cxx::new_allocator<long> const&) [50]
                0.00    0.00     126/252         long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 2> [44]
                0.00    0.00     126/128         bool __gnu_cxx::__is_null_pointer<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>) [49]
-----------------------------------------------
                0.00    0.00     126/126         long* std::__copy_move_a<true, long*, long*>(long*, long*, long*) [64]
[51]     0.0    0.00    0.00     126         std::move_iterator<long*>::base() const [51]
-----------------------------------------------
                0.00    0.00     126/126         std::_Vector_base<long, std::allocator<long> >::_M_get_Tp_allocator() const [102]
[52]     0.0    0.00    0.00     126         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::__distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::random_access_iterator_tag) [52]
                0.00    0.00     126/126         std::_Miter_base<std::move_iterator<long*> >::iterator_type std::__miter_base<std::move_iterator<long*> >(std::move_iterator<long*>) [53]
-----------------------------------------------
                0.00    0.00     126/126         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::__distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::random_access_iterator_tag) [52]
[53]     0.0    0.00    0.00     126         std::_Miter_base<std::move_iterator<long*> >::iterator_type std::__miter_base<std::move_iterator<long*> >(std::move_iterator<long*>) [53]
-----------------------------------------------
                0.00    0.00     126/126         void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
[54]     0.0    0.00    0.00     126         void std::swap<long*>(long*&, long*&) [54]
                0.00    0.00      63/63          std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl(std::allocator<long> const&) [62]
-----------------------------------------------
                0.00    0.00      70/70          void std::_Destroy<long*>(long*, long*) [57]
[55]     0.0    0.00    0.00      70         void std::_Destroy_aux<true>::__destroy<long*>(long*, long*) [55]
-----------------------------------------------
                0.00    0.00       7/70          std::_Vector_base<long, std::allocator<long> >::~_Vector_base() [69]
                0.00    0.00      63/70          std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_M_swap_data(std::_Vector_base<long, std::allocator<long> >::_Vector_impl&) [105]
[56]     0.0    0.00    0.00      70         std::_Vector_base<long, std::allocator<long> >::_M_deallocate(long*, unsigned long) [56]
                0.00    0.00      63/63          __gnu_cxx::new_allocator<long>::deallocate(long*, unsigned long) [59]
-----------------------------------------------
                0.00    0.00      70/70          void std::_Destroy<long*, long>(long*, long*, std::allocator<long>&) [58]
[57]     0.0    0.00    0.00      70         void std::_Destroy<long*>(long*, long*) [57]
                0.00    0.00      70/70          void std::_Destroy_aux<true>::__destroy<long*>(long*, long*) [55]
-----------------------------------------------
                0.00    0.00       7/70          std::vector<long, std::allocator<long> >::~vector() [70]
                0.00    0.00      63/70          void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
[58]     0.0    0.00    0.00      70         void std::_Destroy<long*, long>(long*, long*, std::allocator<long>&) [58]
                0.00    0.00      70/70          void std::_Destroy<long*>(long*, long*) [57]
-----------------------------------------------
                0.00    0.00      63/63          std::_Vector_base<long, std::allocator<long> >::_M_deallocate(long*, unsigned long) [56]
[59]     0.0    0.00    0.00      63         __gnu_cxx::new_allocator<long>::deallocate(long*, unsigned long) [59]
-----------------------------------------------
                0.00    0.00      63/63          long* std::__copy_move_a2<true, long*, long*>(long*, long*, long*) <cycle 2> [47]
[60]     0.0    0.00    0.00      63         std::_Iter_base<std::move_iterator<long*>, true>::_S_base(std::move_iterator<long*>) [60]
-----------------------------------------------
                                  63             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
[61]     0.0    0.00    0.00      63         std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long) <cycle 1> [61]
                             1782388             std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>) <cycle 1> [8]
                             1782388             long* std::__uninitialized_copy_a<std::move_iterator<long*>, long*, long>(std::move_iterator<long*>, std::move_iterator<long*>, long*, std::allocator<long>&) <cycle 1> [23]
-----------------------------------------------
                0.00    0.00      63/63          void std::swap<long*>(long*&, long*&) [54]
[62]     0.0    0.00    0.00      63         std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl(std::allocator<long> const&) [62]
                0.00    0.00      63/252         long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) <cycle 2> [44]
-----------------------------------------------
                0.00    0.00      63/63          std::_Vector_base<long, std::allocator<long> >::_Vector_base(std::allocator<long> const&) [106]
[63]     0.0    0.00    0.00      63         std::allocator_traits<std::allocator<long> >::max_size(std::allocator<long> const&) [63]
-----------------------------------------------
                0.00    0.00      63/63          std::_Niter_base<long*>::iterator_type std::__niter_base<long*>(long*) [111]
[64]     0.0    0.00    0.00      63         long* std::__copy_move_a<true, long*, long*>(long*, long*, long*) [64]
                0.00    0.00     126/126         std::move_iterator<long*>::base() const [51]
                0.00    0.00      63/189         long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<long>(long const*, long const*, long*) [46]
-----------------------------------------------
                0.00    0.00      12/48          char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
                0.00    0.00      36/48          bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [98]
[65]     0.0    0.00    0.00      48         bool __gnu_cxx::operator==<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [65]
                0.00    0.00       4/6           long* std::uninitialized_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) [71]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator<long>::~allocator() [67]
[66]     0.0    0.00    0.00       9         __gnu_cxx::new_allocator<long>::~new_allocator() [66]
-----------------------------------------------
                0.00    0.00       2/9           void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                0.00    0.00       7/9           std::_Vector_base<long, std::allocator<long> >::_Vector_impl::~_Vector_impl() [68]
[67]     0.0    0.00    0.00       9         std::allocator<long>::~allocator() [67]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<long>::~new_allocator() [66]
-----------------------------------------------
                0.00    0.00       7/7           std::_Vector_base<long, std::allocator<long> >::~_Vector_base() [69]
[68]     0.0    0.00    0.00       7         std::_Vector_base<long, std::allocator<long> >::_Vector_impl::~_Vector_impl() [68]
                0.00    0.00       7/9           std::allocator<long>::~allocator() [67]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<long, std::allocator<long> >::~vector() [70]
[69]     0.0    0.00    0.00       7         std::_Vector_base<long, std::allocator<long> >::~_Vector_base() [69]
                0.00    0.00       7/70          std::_Vector_base<long, std::allocator<long> >::_M_deallocate(long*, unsigned long) [56]
                0.00    0.00       7/7           std::_Vector_base<long, std::allocator<long> >::_Vector_impl::~_Vector_impl() [68]
-----------------------------------------------
                0.00    0.00       2/7           BigNumbers::plus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [5]
                0.00    0.00       2/7           void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
                0.00    0.00       3/7           BigNumbers::~BigNumbers() [87]
[70]     0.0    0.00    0.00       7         std::vector<long, std::allocator<long> >::~vector() [70]
                0.00    0.00       7/137         std::_Vector_base<long, std::allocator<long> >::_M_get_Tp_allocator() [48]
                0.00    0.00       7/70          void std::_Destroy<long*, long>(long*, long*, std::allocator<long>&) [58]
                0.00    0.00       7/7           std::_Vector_base<long, std::allocator<long> >::~_Vector_base() [69]
-----------------------------------------------
                0.00    0.00       2/6           std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) <cycle 1> [78]
                0.00    0.00       4/6           bool __gnu_cxx::operator==<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [65]
[71]     0.0    0.00    0.00       6         long* std::uninitialized_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) [71]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator<long>::allocator() [73]
[72]     0.0    0.00    0.00       5         __gnu_cxx::new_allocator<long>::new_allocator() [72]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl() [74]
[73]     0.0    0.00    0.00       5         std::allocator<long>::allocator() [73]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<long>::new_allocator() [72]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<long, std::allocator<long> >::_Vector_base() [75]
[74]     0.0    0.00    0.00       5         std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl() [74]
                0.00    0.00       5/5           std::allocator<long>::allocator() [73]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<long, std::allocator<long> >::vector() [76]
[75]     0.0    0.00    0.00       5         std::_Vector_base<long, std::allocator<long> >::_Vector_base() [75]
                0.00    0.00       5/5           std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl() [74]
-----------------------------------------------
                0.00    0.00       2/5           BigNumbers::string_to_array(std::string&) [2]
                0.00    0.00       3/5           BigNumbers::BigNumbers(std::string, std::string, char) [86]
[76]     0.0    0.00    0.00       5         std::vector<long, std::allocator<long> >::vector() [76]
                0.00    0.00       5/5           std::_Vector_base<long, std::allocator<long> >::_Vector_base() [75]
-----------------------------------------------
                0.00    0.00       2/4           BigNumbers::plus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [5]
                0.00    0.00       2/4           long&& std::forward<long>(std::remove_reference<long>::type&) [121]
[77]     0.0    0.00    0.00       4         char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&) [77]
-----------------------------------------------
                                   4             char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
[78]     0.0    0.00    0.00       4         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) <cycle 1> [78]
                0.00    0.00       2/6           long* std::uninitialized_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) [71]
                                   2             char* std::string::_S_construct_aux<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::__false_type) <cycle 1> [80]
-----------------------------------------------
                0.00    0.00       2/4           char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
                0.00    0.00       2/4           void __gnu_cxx::new_allocator<long>::destroy<long>(long*) [96]
[79]     0.0    0.00    0.00       4         bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&) [79]
-----------------------------------------------
                                   2             std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) <cycle 1> [78]
[80]     0.0    0.00    0.00       2         char* std::string::_S_construct_aux<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::__false_type) <cycle 1> [80]
                                  63             void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&) <cycle 1> [17]
-----------------------------------------------
                                   2             void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
[81]     0.0    0.00    0.00       2         decltype (_S_construct({parm#1}, {parm#2}, (forward<long>)({parm#3}))) std::allocator_traits<std::allocator<long> >::construct<long, long>(std::allocator<long>&, long*, long&&) <cycle 1> [81]
                                   4             char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) <cycle 1> [41]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN10BigNumbers10is_correctERSs [91]
[82]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [82]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [83]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [82]
[83]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [83]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[84]     0.0    0.00    0.00       1         read(char const*, std::string&, std::string&, char&) [84]
-----------------------------------------------
                                   1             BigNumbers::process_by_sign(bool, bool) <cycle 1> [18]
[85]     0.0    0.00    0.00       1         BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) <cycle 1> [85]
                0.00    0.00  594131/2376845     std::vector<long, std::allocator<long> >::size() const [37]
                             1188258             __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) <cycle 1> [19]
                                   1             void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) <cycle 1> [12]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[86]     0.0    0.00    0.00       1         BigNumbers::BigNumbers(std::string, std::string, char) [86]
                0.00    0.00       3/5           std::vector<long, std::allocator<long> >::vector() [76]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[87]     0.0    0.00    0.00       1         BigNumbers::~BigNumbers() [87]
                0.00    0.00       3/7           std::vector<long, std::allocator<long> >::~vector() [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[88]     0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<long> >::_S_propagate_on_move_assign() [88]
-----------------------------------------------
                                   1             __gnu_cxx::__promote_2<int, unsigned int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<unsigned int, std::__is_integer<unsigned int>::__value>::__type>::__type std::pow<int, unsigned int>(int, unsigned int) [89]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN10BigNumbers10is_correctERSs [91]
[89]     0.0    0.00    0.00       1+1       __gnu_cxx::__promote_2<int, unsigned int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<unsigned int, std::__is_integer<unsigned int>::__value>::__type>::__type std::pow<int, unsigned int>(int, unsigned int) [89]
                                   1             __gnu_cxx::__promote_2<int, unsigned int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<unsigned int, std::__is_integer<unsigned int>::__value>::__type>::__type std::pow<int, unsigned int>(int, unsigned int) [89]
-----------------------------------------------
                0.00    0.00       1/1           write(char const*, std::vector<long, std::allocator<long> > const*) [7]
[90]     0.0    0.00    0.00       1         std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [90]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [82] _GLOBAL__sub_I_main    [51] std::move_iterator<long*>::base() const [8] std::vector<long, std::allocator<long> >::_M_move_assign(std::vector<long, std::allocator<long> >&&, std::integral_constant<bool, true>)
  [83] __static_initialization_and_destruction_0(int, int) [22] std::vector<long, std::allocator<long> >::_M_check_len(unsigned long, char const*) const [17] void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long>(long&&)
  [84] read(char const*, std::string&, std::string&, char&) [37] std::vector<long, std::allocator<long> >::size() const [20] std::vector<long, std::allocator<long> >::push_back(long&&)
   [7] write(char const*, std::vector<long, std::allocator<long> > const*) [21] std::vector<long, std::allocator<long> >::operator[](unsigned long) const [76] std::vector<long, std::allocator<long> >::vector()
  [45] BigNumbers::is_correct(std::string&) [73] std::allocator<long>::allocator() [70] std::vector<long, std::allocator<long> >::~vector()
  [18] BigNumbers::process_by_sign(bool, bool) [67] std::allocator<long>::~allocator() [16] std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> >&&)
   [2] BigNumbers::string_to_array(std::string&) [77] char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&) [15] std::vector<long, std::allocator<long> >::operator[](unsigned long)
   [6] BigNumbers::init()     [41] char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) [52] std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::__distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::random_access_iterator_tag)
  [85] BigNumbers::minus(std::vector<long, std::allocator<long> >*, std::vector<long, std::allocator<long> >*) [80] char* std::string::_S_construct_aux<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::__false_type) [53] std::_Miter_base<std::move_iterator<long*> >::iterator_type std::__miter_base<std::move_iterator<long*> >(std::move_iterator<long*>)
   [4] BigNumbers::process()  [14] std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&) [64] long* std::__copy_move_a<true, long*, long*>(long*, long*, long*)
  [10] BigNumbers::manage_CF(bool, int) [60] std::_Iter_base<std::move_iterator<long*>, true>::_S_base(std::move_iterator<long*>) [47] long* std::__copy_move_a2<true, long*, long*>(long*, long*, long*)
  [86] BigNumbers::BigNumbers(std::string, std::string, char) [46] long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<long>(long const*, long const*, long*) [71] long* std::uninitialized_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*)
  [87] BigNumbers::~BigNumbers() [55] void std::_Destroy_aux<true>::__destroy<long*>(long*, long*) [23] long* std::__uninitialized_copy_a<std::move_iterator<long*>, long*, long>(std::move_iterator<long*>, std::move_iterator<long*>, long*, std::allocator<long>&)
  [59] __gnu_cxx::new_allocator<long>::deallocate(long*, unsigned long) [61] std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long) [13] std::move_iterator<long*> std::__make_move_if_noexcept_iterator<long*, std::move_iterator<long*> >(long*)
  [42] __gnu_cxx::new_allocator<long>::allocate(unsigned long, void const*) [62] std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl(std::allocator<long> const&) [40] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [43] void __gnu_cxx::new_allocator<long>::construct<long, long>(long*, long&&) [74] std::_Vector_base<long, std::allocator<long> >::_Vector_impl::_Vector_impl() [24] __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int)
  [50] __gnu_cxx::new_allocator<long>::new_allocator(__gnu_cxx::new_allocator<long> const&) [68] std::_Vector_base<long, std::allocator<long> >::_Vector_impl::~_Vector_impl() [89] __gnu_cxx::__promote_2<int, unsigned int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<unsigned int, std::__is_integer<unsigned int>::__value>::__type>::__type std::pow<int, unsigned int>(int, unsigned int)
  [72] __gnu_cxx::new_allocator<long>::new_allocator() [56] std::_Vector_base<long, std::allocator<long> >::_M_deallocate(long*, unsigned long) [44] long* std::copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*)
  [66] __gnu_cxx::new_allocator<long>::~new_allocator() [48] std::_Vector_base<long, std::allocator<long> >::_M_get_Tp_allocator() [54] void std::swap<long*>(long*&, long*&)
  [88] __gnu_cxx::__alloc_traits<std::allocator<long> >::_S_propagate_on_move_assign() [75] std::_Vector_base<long, std::allocator<long> >::_Vector_base() [57] void std::_Destroy<long*>(long*, long*)
  [49] bool __gnu_cxx::__is_null_pointer<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>) [69] std::_Vector_base<long, std::allocator<long> >::~_Vector_base() [58] void std::_Destroy<long*, long>(long*, long*, std::allocator<long>&)
  [39] __gnu_cxx::__normal_iterator<char*, std::string>::__normal_iterator(char* const&) [9] std::enable_if<std::allocator_traits<std::allocator<long> >::__destroy_helper<long>::value, void>::type std::allocator_traits<std::allocator<long> >::_S_destroy<long>(std::allocator<long>&, long*) [78] std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::string> >::difference_type std::distance<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
  [65] bool __gnu_cxx::operator==<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [63] std::allocator_traits<std::allocator<long> >::max_size(std::allocator<long> const&) [79] bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&)
  [19] __gnu_cxx::__normal_iterator<char*, std::string>::difference_type __gnu_cxx::operator-<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [81] decltype (_S_construct({parm#1}, {parm#2}, (forward<long>)({parm#3}))) std::allocator_traits<std::allocator<long> >::construct<long, long>(std::allocator<long>&, long*, long&&) [90] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  [11] __gnu_cxx::__normal_iterator<char*, std::string>::base() const [38] long* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<long*>, long*>(std::move_iterator<long*>, std::move_iterator<long*>, long*) [1] <cycle 1>
  [25] __gnu_cxx::__normal_iterator<char*, std::string>::operator-(long const&) const [12] void std::vector<long, std::allocator<long> >::emplace_back<long>(long&&) [30] <cycle 2>
